#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
description: get the most recent donor json files
version: 0.0.1
created: 2018-02-21
author: Ed Nykaza
dependencies:
    * requires environmental variables: import environmentalVariables.py
    * list of donors generated by get-donor-list.py
license: BSD-2-Clause
"""

# %% load in required libraries
import environmentalVariables
import pandas as pd
import numpy as np
import os
import sys
import subprocess as sub

# %% user inputs (choices to be made to run code)
securePath = "/tidepoolSecure/data/"
dateStamp = "2018-02-27"

# %% define global variables
phiDateStamp = "PHI-" + dateStamp

# create output folders
donorJsonDataFolder = securePath + phiDateStamp + "-donorJsonData/"
if not os.path.exists(donorJsonDataFolder):
    os.makedirs(donorJsonDataFolder)

# load in list of unique donors
uniqueDonors = pd.read_csv(securePath + phiDateStamp + "-uniqueDonorList.csv")


# %% pull the json files for all of the unique donors
for userID, donorGroup in zip(uniqueDonors.userID, uniqueDonors.donorGroup):
    jsonDataName = userID + ".json"
    outputFilePathName = donorJsonDataFolder + jsonDataName

    # case where donorGroup is nan, but should be ""
    if np.isnan(donorGroup):
        donorGroup = ""

    # get environmental variables
    email, password = \
        environmentalVariables.get_environmental_variables(donorGroup)

    # get json data
    p = sub.Popen(["getdata",
                   email,
                   userID,
                   "-p",
                   password,
                   "-o",
                   outputFilePathName,
                   "-v"], stdout=sub.PIPE, stderr=sub.PIPE)

    output, errors = p.communicate()
    output = output.decode("utf-8")
    errors = errors.decode("utf-8")

    if output.startswith("Successful login.\nSuccessful") is False:
        sys.exit("ERROR with" + email +
                 " ouput: " + output +
                 " errorMessage: " + errors)

    print(userID, "complete")
